<?phpclass ActivityPaypalPayFlow extends CApplicationComponent { // run_payflow_call: Runs a Payflow API call.$params is an associative array of// Payflow API parameters.  Returns FALSE on failure, or an associative array of response// parameters on success.  public function run_payflow_call($params) {  ###------------------------------------------------------####$SqlSetting = " SELECT * FROM peg_site_settings WHERE id=1"; $ArraySettingResult = Yii::app()->db->createCommand($SqlSetting)->queryAll();###------------------------------------------------------####         Yii::app()->params['siteSettingsConfig'] =$ArraySettingResult[0]; if (!isset($environment)) $environment = 'pilot';$paramList = array();   foreach($params as $index => $value) {        $paramList[] = $index . "[" . strlen($value) . "]=" . $value;    }        $apiStr = implode("&", $paramList);         // Which endpoint will we be using?    if($paramList['USER']==trim($paramList['USER']) || $paramList['VENDOR']==trim($paramList['VENDOR']) || $paramList['PWD']==trim($paramList['PWD'])){if(Yii::app()->params['siteSettingsConfig']['sand_box'] == "Yes")        {            $endpoint = "https://pilot-payflowpro.paypal.com/";           }        else        {           $endpoint = "https://payflowpro.paypal.com";             }}else{     $endpoint = "https://pilot-payflowpro.paypal.com/";  }// Initialize our cURL handle.    $curl = curl_init($endpoint);         curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);         // If you get connection errors, it may be necessary to uncomment    // the following two lines:    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);   curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);         curl_setopt($curl, CURLOPT_POST, TRUE);    curl_setopt($curl, CURLOPT_POSTFIELDS, $apiStr);         $result = curl_exec($curl);  if($result === FALSE) {      echo curl_error($curl);      return FALSE;    }    elsereturn parse_payflow_string($result);}          public function script_url() { return (@$_SERVER['HTTPS'] ? 'https://' : 'http://') . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'];} }